<%= form_with(model: room) do |form| %>
    <% if room.errors.any? %>
        <div style="color: red">
            <h2><%= pluralize(room.errors.count, "error") %> prohibited this room from being saved:</h2>
            <ul>
                <% room.errors.each do |error| %>
                    <li><%= error.full_message %></li>
                <% end %>
            </ul>
        </div>
    <% end %>

    <div>
        <%= form.label :name, style: "display: none" %>
        <%= form.text_field :name, style: "display: none", id:'roomTypeField'%>
    </div>

    <div>
        <%= form.label :price, style: "display: none" %>
        <%= form.text_field :price, style: "display: none", id:'totalPriceField' %>
    </div>

    <div class='userInputDiv'>
        <div class='getName'>
            <%= form.label :firstName, value:'First Name:' %>
            <%= form.text_field :firstName, pattern:"[A-Z][a-z]+", required: true %>
        </div>

        <div class='getName'>
            <%= form.label :lastName, value:'Last Name:' %>
            <%= form.text_field :lastName, pattern:"[A-Z][a-z]+", required: true %>
        </div>

        <div class='getName'>
            <%= form.label :userEmail, value:'Email:' %>
            <%= form.text_field :userEmail, type:'email', required: true %>
        </div>
    </div>

    <div class="calendar" style="border: 3px solid black;">
        <div class="calendar-container">
            <div class="calendar-input">
                <%= form.label :from_date, style: "display: block"%>
                <%= form.date_field :from_date, type: "text", id:"check-in", class:"date-input", required: true %>
            </div>
            <div class="calendar-input">
                <%= form.label :to_date, style: "display: block"%>
                <%= form.date_field :to_date, type: "text", id: "check-out", class:"date-input", required: true %>
            </div>
            <div class="calendar" style="margin-bottom: 0px;">
                <div class="calendar-header">
                    <button class="prev-month">&#8249;</button>
                    <h2 class="calendar-title"></h2>
                    <button class="next-month">&#8250;</button>
                </div>
                <div class="calendar-body">
                    <div class="calendar-row">
                      <div class="calendar-cell">S</div>
                      <div class="calendar-cell">M</div>
                      <div class="calendar-cell">T</div>
                      <div class="calendar-cell">W</div>
                      <div class="calendar-cell">T</div>
                      <div class="calendar-cell">F</div>
                      <div class="calendar-cell">S</div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <%= form.submit value: "Reserve Room", class:'reserve'%>
<% end %>

<div id='cited-Sources'>
</div>

<script>
    $(document).ready(function() {
        var prevMonthButton = document.querySelector('.prev-month');
        var nextMonthButton = document.querySelector('.next-month');
        prevMonthButton.addEventListener('click', function(event) {event.preventDefault();});
        nextMonthButton.addEventListener('click', function(event) {event.preventDefault();});

        //Get database days
        var mydata = [];
        $.ajax({
            url: '/rooms', 
            type: 'GET',
            dataType: 'json',
            success: function(data) {
                // Loop through the data and add it to the 2D array
                for (let i = 0; i < data.length; i++) {
                    let fromDate = new Date(data[i].from_date);
                    let toDate = new Date(data[i].to_date);
                    let fromDay = fromDate.getDate();
                    let fromMonth = fromDate.getMonth()+1;
                    let fromYear = fromDate.getFullYear();
                    let toDay = toDate.getDate();
                    let toMonth = toDate.getMonth()+1;
                    let toYear = toDate.getFullYear();

                    let row = [data[i].name, {day: fromDay, month: fromMonth, year: fromYear}, {day: toDay, month: toMonth, year: toYear}];
                    mydata.push(row);
                }

                // Create calendar after data is finished
                createCalendar();
            },
            error: function(jqXHR, textStatus, errorThrown) {
                console.log(textStatus + ': ' + errorThrown);
            }
        });
        
        function createCalendar() {
            //create responsive calendar
            var months = [
                'January',
                'February',
                'March',
                'April',
                'May',
                'June',
                'July',
                'August',
                'September',
                'October',
                'November',
                'December'
            ];

            var currentDate = new Date();
            var currentYear = currentDate.getFullYear();
            var currentMonth = currentDate.getMonth();
            var currentDay = currentDate.getDate();

            var selectedCheckInDate = null;
            var selectedCheckOutDate = null;

            var checkInInput = $('#check-in');
            var checkOutInput = $('#check-out');

            function populateCalendar(month, year) {
                var monthTitle = document.querySelector('.calendar-title');
                monthTitle.textContent = months[month];

                var daysInMonth = new Date(year, month + 1, 0).getDate();
                var firstDay = new Date(year, month, 1).getDay();
                var lastDay = new Date(year, month, daysInMonth).getDay();

                var days = [];

                for (var i = 1; i <= daysInMonth; i++) {
                    days.push({
                        day: i,
                        month: month,
                        year: year
                    });
                }

                for (var i = 0; i < firstDay; i++) {
                    days.unshift(null);
                }

                for (var i = lastDay; i < 6; i++) {
                    days.push(null);
                }

                var calendarBody = $('.calendar-body');
                calendarBody.empty();

                days.forEach(function(day) {
                    var cell = $('<div class="calendar-cell"></div>');

                    if (day === null) {
                        cell.addClass('disabled');
                    } else {
                        cell.text(day.day);
                        var count = 0;

                        for (var i = 0; i < mydata.length; i++) {
                            var fromDate = mydata[i][1];
                            var toDate = mydata[i][2];
                            var currentDate = new Date(day.year, day.month, day.day);
                            var fromDateTime = new Date(fromDate.year, fromDate.month-1, fromDate.day);
                            var toDateTime = new Date(toDate.year, toDate.month-1, toDate.day);
                            var urlParams = new URLSearchParams(window.location.search);
                            var getRoomtype = urlParams.get("roomType");
                            var roomAmount = 0;

                            if (getRoomtype == 'Standard Room'){
                                roomAmount = 20;
                            }else if (getRoomtype == 'Deluxe Room'){
                                roomAmount = 10;
                            }else if (getRoomtype == 'Connecting Room'){
                                roomAmount = 10;
                            }else if (getRoomtype == 'Suite Room'){
                                roomAmount = 5;
                            }

                            if ((currentDate >= fromDateTime) && (currentDate <= toDateTime) && (getRoomtype == mydata[i][0])) {
                                // Increase count if the room is booked on this day
                                count += 1;
                                if (count >= roomAmount) {
                                    cell.addClass('disabled');
                                    cell.css('background-color', 'yellow');
                                    break;
                                }
                            } 
                        }

                        if (currentDate < (new Date())){
                            if (cell.css('background-color') !== 'yellow'){
                                cell.addClass('disabled');
                                cell.css('background-color', 'red');
                            }
                        }else if (selectedCheckInDate !== null && selectedCheckOutDate === null) {
                            var checkInDate = new Date(selectedCheckInDate.year,selectedCheckInDate.month,selectedCheckInDate.day);
                            var currentDate = new Date(day.year, day.month, day.day);
                            
                            if (currentDate >= checkInDate) {
                                if (currentDate <= checkInDate) {
                                    cell.css('color', '#fff');
                                    cell.css('background-color', 'green');
                                } else {
                                    cell.addClass('active');
                                }
                            } 
                        } else if (selectedCheckInDate === null && selectedCheckOutDate === null) {
                            var currentDate = new Date(day.year, day.month, day.day);

                            if (currentDate.getFullYear() === currentYear && currentDate.getMonth() === currentMonth && currentDate.getDate() === currentDay) {
                                cell.addClass('active');
                            }
                        } else if (selectedCheckInDate !== null && selectedCheckOutDate !== null) {
                            var checkInDate = new Date(selectedCheckInDate.year,selectedCheckInDate.month,selectedCheckInDate.day);
                            var checkOutDate = new Date(selectedCheckOutDate.year,selectedCheckOutDate.month,selectedCheckOutDate.day)
                            if (currentDate >= checkInDate) {
                                if (currentDate <= checkInDate) {
                                    cell.css('color', '#fff');
                                    cell.css('background-color', 'green');
                                } else {
                                    cell.addClass('active');
                                }
                            } 

                            if (currentDate >= checkOutDate) {
                                if (currentDate <= checkOutDate) {
                                    cell.css('background-color', 'green');
                                } else {
                                    cell.removeClass('active');
                                }
                            }
                        } 
                    }

                    cell.on('click', function() {
                        if (selectedCheckInDate === null) {
                            var datePicked = (year+'-'+('0' + (currentDate.getMonth()+1)).slice(-2)+'-'+('0' + currentDate.getDate()).slice(-2));
                            selectedCheckInDate = day;
                            checkInInput.val(datePicked);
                        } else if (selectedCheckOutDate === null) {
                            var datePicked = (year+'-'+('0' + (currentDate.getMonth()+1)).slice(-2)+'-'+('0' + currentDate.getDate()).slice(-2));
                            selectedCheckOutDate = day;   
                            checkOutInput.val(datePicked);
                        } else {
                            var datePicked = (year+'-'+('0' + (day.month+1)).slice(-2)+'-'+('0' + day.day).slice(-2));
                            selectedCheckInDate = day;
                            selectedCheckOutDate = null;
                            checkInInput.val(datePicked);
                            checkOutInput.val('');
                        }
                        populateCalendar(month, year);
                    });
                    calendarBody.append(cell);
                });
            }

            populateCalendar(currentMonth, currentYear);
            $('.prev-month').on('click', function() {
                currentMonth--;
                if (currentMonth < 0) {
                    currentMonth = 11;
                    currentYear--;
                }
                populateCalendar(currentMonth, currentYear);
            });

            $('.next-month').on('click', function() {
                currentMonth++;
                if (currentMonth > 11){
                    currentMonth = 0;
                    currentYear++;
                }
                populateCalendar(currentMonth, currentYear);
            });
        };
    });
</script>